#widget {
	display: none;
	@include desktop {
		display: flex;
		align-items: center;
		margin-bottom: 1.5625rem;
		position: absolute;
		top: 21.625rem;
		z-index: 5;
		left: 6.0625rem;
	}
	#label {
		display: none;
	}
	label {
		font-size: 1.125rem;
		font-weight: bold;
		cursor: pointer;
	}
}
.widget select,
.no-widget .select {
	/* Ce sélecteur CSS dit fondamentalement :
     - soit la classe body est "widget" et donc l'élément <select> réel sera caché
     - soit la classe body n'a pas changé, elle est toujours "no-widget",
       et donc les éléments, dont la classe est « select », doivent être cachés */
	position: absolute;
	left: -5000em;
	height: 0;
	overflow: hidden;
}
.select {
	/* Celui-ci crée un contexte de positionnement pour la liste des options */
	position: relative;
	/* Celui-ci fait que le widget devient partie du flot textuel
     et devient en même temps dimensionnable */
	display: flex;
	align-items: center;
	/* Toutes les tailles seront exprimées en valeurs em (lettre M, étalon
     du cadratin : cadre dans lequel sont dessinées toutes les lettres d'une
     police de caractères) pour des raisons d'accessibilité (pour être sûrs
     que le widget reste redimensionnable si l'utilisateur utilise le zoom
     du navigateur en mode texte exclusif). Les calculs sont faits en
     supposant que 1em==16px qui est la valeur par défaut dans la majorité
     des navigateurs. Si vous êtes perdus avec les conversions entre px et
     em, essayez http://riddle.pl/emcalc/ */
	background-color: $primary1;
	color: white;
	width: 10.625rem;
	height: 3.75rem;
	border-radius: 5px;
	margin-left: 1.5625rem;
	cursor: pointer;
	&.active {
		outline: none;
		/* Cette propriété box-shadow n'est pas requise à proprement parler, mais il est
			 important de s'assurer que l'état actif soit visible, c'est pourquoi nous
			 utilisons une valeur par défaut. Vous êtes libre de la modifier. */
		border-radius: 5px 5px 0 0;
		&:after {
			transform: rotate(180deg);
		}
	}
	&:after {
		font-family: "Font Awesome 5 Free";
		content: "\f078";
		font-weight: bold;
		z-index: 5; /* Il est important d'empêcher la flèche de chevaucher la liste des options */
		margin-right: 1.125rem;
		font-size: 1.1875rem;
		transform: rotate(0);
	}
	.highlight {
		background: $secondary1;
		color: #ffffff;
		border-radius: 5px;
	}
	.value {
		/* Comme la valeur peut être plus large que le widget, nous devons nous
     assurer qu'elle ne changera pas la largeur du widget. */
		display: inline-block;
		width: 100%;
		overflow: hidden;
		/* Et si le contenu déborde, c'est mieux d'avoir une jolie abreviation. */
		white-space: nowrap;
		text-overflow: ellipsis;
		font-size: 1.125rem;
		font-weight: bold;
		margin-left: 1.25rem;
		color: white;
	}
	/* Le sélecteur .select ici est du sucre syntaxique (le fait de donner au
   programmeur des possibilités d'écriture plus succinctes ou plus proches
   d'une notation usuelle) pour s'assurer que les classes que nous définissons
   sont les seules à l'intérieur du widget. */
	.optList {
		/* Ceci assure que la liste des options sera affichée au dessous de la valeur
			 et en dehors du flot HTML */
		position: absolute;
		top: 0;
		left: 0;
		z-index: 2; /* Nous disons explicitement que la liste des options doit toujours passer sur la flèche */
		/* cela réinitialiser le style par défaut de l'élément ul */
		list-style: none;
		margin: 0;
		padding: 0;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
		/* Cela nous assure que même si les valeurs sont plus petites que le widget,
     la liste des options sera aussi large que le widget lui‑même */
		min-width: 100%;
		/* Dans le cas où la liste est trop longue, son contenu débordera verticalement
     (ce qui ajoutera une barre de déroulement automatiquement) mais jamais horizontalement
     (car nous n'avons jamais défini de largeur, la liste ajustera automatiquement sa largeur
     Si ce n'est pas possible, le contenu sera tronqué) */
		max-height: 10em; /* 100px */
		overflow-y: hidden;
		overflow-x: hidden;
		// border: 0.2em solid #000; /* 2px */
		border-top-width: 0.1em; /* 1px */
		border-radius: 0.4em 0.4em 0.4em 0.4em; /* 0 0 4px 4px */
		box-shadow: 0 0.2em 0.4em rgba(0, 0, 0, 0.4); /* 0 2px 4px */
		background: $primary1;
		height: 10.625rem;
		font-size: 1.125rem;
		&.hidden {
			/* Ceci est un moyen simple pour cacher la liste tout en conservant l'accessibilité,
     nous reparlerons plus loin d'accessibilité */
			max-height: 0;
			visibility: hidden;
		}
		.option {
			display: flex;
			align-items: center;
			margin: 0 10px;
			padding-left: 10px;
			height: 33.33%;
			font-weight: bold;
			border-top: 1px solid white;
		}
		.borderOff {
			border: none;
		}
	}
}
