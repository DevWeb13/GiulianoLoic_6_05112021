(()=>{"use strict";var __webpack_modules__={394:()=>{eval('\n;// CONCATENATED MODULE: ./src/services/dataManager.js\nlet data;\n\nasync function fetchPhotographers() {\n\tconst res = await fetch("./data/FishEyeData.json");\n\tdata = await res.json();\n\treturn data.photographers;\n}\n\n\n\n;// CONCATENATED MODULE: ./src/components/btContact/btContact.js\n// export default function BtContact() {\n// \tconst btContacts = document.querySelectorAll(".btContact[type=button]");\n// \tconst bground = document.querySelector(".bground");\n\n// \t/**\n// \t * Au clic sur un des boutons "Contactez moi" => Ouverture de la form-modal\n// \t */\n// \tbtContacts.forEach((btContact) =>\n// \t\tbtContact.addEventListener("click", function () {\n// \t\t\tbground.setAttribute("visible", "true");\n// \t\t})\n// \t);\n// }\n\nclass BtContact {\n\tconstructor(domtarget, props) {\n\t\tthis.DOM = domtarget;\n\t\tthis.className = props.className;\n\t\tthis.type = props.type;\n\t\tthis.text = props.text;\n\t\tthis.render();\n\t}\n\trender() {\n\t\tthis.DOM.innerHTML += /* html */ `\n\t\t<button class="${this.className}" type="${this.type}">\n    \t${this.text}\n\t\t</button>\n\t\t\n\t\t`;\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/tags/tags.js\nclass Tags {\n\tconstructor(domTarget, tag, className, className2) {\n\t\tthis.DOM = domTarget;\n\t\tthis.tag = tag;\n\t\tthis.className = [className];\n\t\tif (className2) {\n\t\t\tthis.className.push(className2);\n\t\t}\n\t\tthis.render();\n\t}\n\trender() {\n\t\tconst button = document.createElement("button");\n\t\tthis.className.forEach((newClass) => {\n\t\t\tbutton.classList.add(newClass);\n\t\t});\n\t\tthis.DOM.appendChild(button);\n\t\tbutton.innerHTML += /* html */ `#${this.tag}`;\n\t\tthis.addDisabled(button);\n\t}\n\n\taddDisabled(button) {\n\t\tif (this.className.length === 1) {\n\t\t\tbutton.disabled = true;\n\t\t}\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/header/header.js\n\n\nclass Header {\n\t/**\n\t * [constructor description]\n\t *\n\t * @param   {HTMLElement}  domTarget   [domTarget description]\n\t * @param\t\t{array} tagsChecked\n\t * @param   {String}  className   [className description]\n\t * @param   {String}  [className2]  [className2 description]\n\t */\n\tconstructor(domTarget, tagsChecked, className, className2) {\n\t\tthis.DOM = domTarget;\n\t\tthis.tagsChecked = tagsChecked;\n\t\tthis.className = [className];\n\t\tif (className2) this.className.push(className2);\n\t\tthis.tagsValueArray = [\n\t\t\t"portrait",\n\t\t\t"art",\n\t\t\t"fashion",\n\t\t\t"architecture",\n\t\t\t"travel",\n\t\t\t"sports",\n\t\t\t"animals",\n\t\t\t"events",\n\t\t];\n\t\tthis.render();\n\t}\n\trender() {\n\t\tthis.DOM.innerHTML = "";\n\t\tconst header = document.createElement("header");\n\t\tthis.DOM.appendChild(header);\n\t\tthis.className.forEach((newClass) => {\n\t\t\theader.classList.add(newClass);\n\t\t});\n\t\theader.innerHTML = /* html */ `\n\t\t\t<button class="logo" title="logo" alt="Fisheye Home Page" >\n\t\t\t\t<img src=" ./img/logo/logo.svg" alt="logo" onclick="goHome()">\n\t\t\t</button>\n\t\t\t<h1 class="lobbyH1">Nos photographes</h1>\n\t\t\t `;\n\t\tif (this.className.length === 1) {\n\t\t\tconst nav = document.createElement("nav");\n\t\t\tthis.tagsValueArray.forEach((tagValue) => {\n\t\t\t\tnew Tags(nav, tagValue, "tags", "tags-link");\n\t\t\t});\n\t\t\theader.appendChild(nav);\n\t\t\tconst tags = document.querySelectorAll(".tags-link");\n\t\t\tthis.tagsChecked.forEach((tagChecked) => {\n\t\t\t\ttags.forEach((tag) => {\n\t\t\t\t\tif (tag.innerHTML == tagChecked) {\n\t\t\t\t\t\ttag.setAttribute("isChecked", "true");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/photographer-card/photographer-card.js\n\n\nclass PhotographerCard {\n\tconstructor(domTarget, props) {\n\t\tthis.DOM = domTarget;\n\t\tthis.articleClassName = props.articleClassName;\n\t\tthis.btClassName = props.btClassName;\n\t\tthis.imgLink = "./img/PhotographersIDPhotos/" + props.portrait;\n\t\tthis.name = props.name;\n\t\tthis.location = props.city + ", " + props.country;\n\t\tthis.tagline = props.tagline;\n\t\tthis.price = props.price + "€/jour";\n\t\tthis.tags = props.tags;\n\t\tthis.id = props.id;\n\t\tthis.render();\n\t}\n\trender() {\n\t\tconst article = document.createElement("article");\n\t\tarticle.className = this.articleClassName;\n\t\tarticle.id = this.id;\n\t\tthis.DOM.appendChild(article);\n\t\tarticle.innerHTML += /* html */ `\n      <button class=${this.btClassName} id=${this.id} name="${this.name}"> \n        <div class="photographer-card-link-imgContainer">\n          <img src=${this.imgLink}  alt="" cover width="208px" height="208px"/>\n        </div>\n        <h2>\n          ${this.name}\n        </h2>\n      </button>\n\t\t\t<p class="location">\n        ${this.location}\n      </p>\n      <p class="tagline tagline_photographerPages">\n        ${this.tagline}\n      </p>\n      <p class="price">\n        ${this.price}\n      </p>\n    `;\n\t\tconst nav = document.createElement("nav");\n\t\tthis.tags.forEach((/** @type {any} */ tag) => {\n\t\t\tnew Tags(nav, tag, "tags");\n\t\t});\n\t\tarticle.appendChild(nav);\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/photographer-card-big/photographer.card.big.js\n\n\n\n/**\n * Carte du photographe dans sa page perso\n */\nclass PhotographerCardBig {\n\tconstructor(domTarget, props) {\n\t\tthis.DOM = domTarget;\n\t\tthis.articleClassName = props.articleClassName;\n\t\tthis.btClassName = props.btClassName;\n\t\tthis.imgLink = "./img/PhotographersIDPhotos/" + props.portrait;\n\t\tthis.nom = props.name;\n\t\tthis.location = props.city + ", " + props.country;\n\t\tthis.tagline = props.tagline;\n\t\tthis.price = props.price + "€/jour";\n\t\tthis.tags = props.tags;\n\t\tthis.id = props.id;\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tconst article = document.createElement("article");\n\t\tarticle.className = this.articleClassName;\n\t\tthis.DOM.appendChild(article);\n\t\tarticle.innerHTML = /* html */ `\n\t\t\t\t\t\t<div class="photographer-card-link-imgContainer photographer-card-big-imgContainer">\n\t\t\t\t\t\t\t<img src="${this.imgLink}"  alt="" cover />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t${this.nom}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<p class="location">\n\t\t\t\t\t\t\t${this.location}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p class="tagline">\n\t\t\t\t\t\t\t${this.tagline}\n\t\t\t\t\t\t</p>\n   `;\n\t\tconst nav = document.createElement("nav");\n\t\tthis.tags.forEach((tag) => {\n\t\t\tnew Tags(nav, tag, "tags", "tags-link");\n\t\t});\n\t\tarticle.appendChild(nav);\n\t\tthis.insertBtContactDesktop(article);\n\t\tthis.insertBtContactMobile(article);\n\t}\n\t/**\n\t * Insertion du bouton contact version desktop\n\t *\n\t * @param   {HTMLElement}  article  Description du photographe\n\t *\n\t * @return  {void}       \t Insertion du bouton contact version desktop\n\t */\n\tinsertBtContactDesktop(article) {\n\t\tnew BtContact(article, {\n\t\t\tclassName: "btContact btContact-desktop",\n\t\t\ttype: "button",\n\t\t\ttext: "Contactez moi",\n\t\t});\n\t}\n\t/**\n\t * Insertion du bouton contact version mobile\n\t *\n\t * @param   {HTMLElement}  article  Description du photographe\n\t *\n\t * @return  {void}       \t Insertion du bouton contact version mobile\n\t */\n\tinsertBtContactMobile(article) {\n\t\tnew BtContact(article, {\n\t\t\tclassName: "btContact btContact-mobile",\n\t\t\ttype: "button",\n\t\t\ttext: "Contactez moi",\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/app.js\n// import Header from "./components/header/header";\n// import PhotographerCard from "./components/photographer-card/photographer-card";\n// // import FilterLink from "./components/filterLink/filterLink";\n// // const { util } = require("webpack");\n\n// // import Widget from "./components/widget/widget";\n// // import FormModal from "./components/form-modal/form-modal";\n// // import BtContact from "./components/btContact/btContact";\n\n// import { fetchPhotographers } from "./services/dataManager";\n\n// // fetchPhotographers();\n// /**\n//  * Affichage de chaque description de photographe\n//  *\n//  * @return  {promise}      Affichage de chaque description de photographe\n//  */\n// async function displayPhotographersDescriptions() {\n// \tconst photographers = await fetchPhotographers();\n// \tphotographers.forEach((photographer) => {\n// \t\tnew PhotographerCard(document.querySelector("main"), {\n// \t\t\t...photographer,\n// \t\t\tarticleClassName: "photographer-card",\n// \t\t\tbtClassName: "photographer-card-link",\n// \t\t});\n// \t});\n// }\n\n// new Header(document.querySelector("header"));\n// displayPhotographersDescriptions();\n\n/* ******************************************************************************************************************************************************** */\n\n\n\n\n\n\nconst body = document.body;\n/**\n * Tableau contenant les tags Checked\n *\n * @var {array}\n */\nlet tagsChecked = [];\n/**\n * [id description]\n *\n * @var {[type]}\n */\nlet id;\n\n/* *************************************************************************************************************************************************************************************************************************************************************** */\n/**\n * Object contains functions utils\n *\n * @var {object}\n */\nconst utils = {\n\tgoToContentManage: function () {\n\t\tconst goToContent = document.querySelector(".goToContent");\n\t\tif (goToContent !== null) {\n\t\t\tif (window.scrollY > 20) {\n\t\t\t\tgoToContent.setAttribute("visible", "true");\n\t\t\t\tgoToContent.addEventListener("click", () => {\n\t\t\t\t\twindow.location.href = "#main";\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgoToContent.removeAttribute("visible");\n\t\t\t}\n\t\t}\n\t},\n\n\trazLobby: function () {\n\t\ttagsChecked = [];\n\t\tviews.lobby();\n\t},\n\n\ttagsManage: function () {\n\t\tconst tags = document.querySelectorAll(".tags-link");\n\t\ttags.forEach((tag) => {\n\t\t\ttag.addEventListener("click", () => {\n\t\t\t\tif (!tag.hasAttribute("isChecked")) {\n\t\t\t\t\ttag.setAttribute("isChecked", "true");\n\t\t\t\t\ttagsChecked.push(tag.innerHTML);\n\t\t\t\t} else {\n\t\t\t\t\ttag.removeAttribute("isChecked");\n\t\t\t\t\ttagsChecked.splice(tagsChecked.indexOf(tag.innerHTML), 1);\n\t\t\t\t}\n\t\t\t\tviews.lobby();\n\t\t\t\treturn tagsChecked;\n\t\t\t});\n\t\t});\n\t},\n\t/**\n\t * Au clic sur button active la view\n\t *\n\t * @param   {HTMLElement} element  button  button\n\t * @param   {object}  view   View à activer\n\t *\n\t * @return  {void}          Definie la view en fonction du clic sur button\n\t */\n\tactiveLink: function (button, view) {\n\t\tbutton.addEventListener("click", view);\n\t},\n\n\t/**\n\t * Affichage de la description du photographe dans views.photographer\n\t *\n\t * @param   {number}  id  id du photographe\n\t *\n\t * @return  {promise}      Affiche la description du photographe dans views.photographer en fonction de son id\n\t */\n\tdisplayPhotographersCardsBig: async function (id) {\n\t\tconst photographers = await fetchPhotographers();\n\t\tconst main = document.createElement("main");\n\t\tmain.id = "photographer-main";\n\t\tdocument.body.appendChild(main);\n\t\tphotographers.forEach((photographer) => {\n\t\t\tif (photographer.id == id) {\n\t\t\t\tnew PhotographerCardBig(main, {\n\t\t\t\t\t...photographer,\n\t\t\t\t\tarticleClassName: "photographer-card-big",\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Au clic sur un des buttons active la view\n\t *\n\t * @param   {NodeListOf}  buttons  Array of buttons\n\t * @param   {object}  view   View à activer\n\t *\n\t * @return  {void}            Definie la view en fonction du clic sur un des buttons\n\t */\n\tactiveManyLinks: function (buttons, view) {\n\t\tbuttons.forEach((button) => {\n\t\t\tbutton.addEventListener("click", view);\n\t\t});\n\t},\n\n\t/**\n\t * Recupération de l\'id du photographe lors du clic sur sa carte\n\t *\n\t * @param   {NodeListOf}  buttons  Cartes des photographes\n\t *\n\t * @return  {any}         Retourne l\' id du photographe dont la carte a été cliqué\n\t */\n\trecupLinkId: function (buttons) {\n\t\tbuttons.forEach((button) => {\n\t\t\tbutton.addEventListener("click", () => {\n\t\t\t\tid = button.id;\n\t\t\t\treturn id;\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Affichage de chaque carte de photographe\n\t *\n\t * @param  {string | string[]}  tagsChecked   Tags checked\n\t *\n\t * @return  {promise}      Affichage de chaque carte de photographe\n\t */\n\tdisplayPhotographersCards: async function (tagsChecked) {\n\t\tconst photographers = await fetchPhotographers();\n\t\tconst main = document.createElement("main");\n\t\tmain.id = "main";\n\t\tdocument.body.appendChild(main);\n\t\tphotographers.forEach((/** @type {{ tags: any[]; }} */ photographer) => {\n\t\t\tif (tagsChecked === undefined || tagsChecked.length === 0) {\n\t\t\t\tnew PhotographerCard(main, {\n\t\t\t\t\t...photographer,\n\t\t\t\t\tarticleClassName: "photographer-card",\n\t\t\t\t\tbtClassName: "photographer-card-link",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst test = photographer.tags.some((tag) =>\n\t\t\t\t\ttagsChecked.includes("#" + tag)\n\t\t\t\t);\n\t\t\t\tif (test) {\n\t\t\t\t\tnew PhotographerCard(main, {\n\t\t\t\t\t\t...photographer,\n\t\t\t\t\t\tarticleClassName: "photographer-card",\n\t\t\t\t\t\tbtClassName: "photographer-card-link",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst buttons = document.querySelectorAll(".photographer-card-link");\n\t\tutils.recupLinkId(buttons);\n\t\tutils.activeManyLinks(buttons, views.photographer);\n\t},\n};\n/* *************************************************************************************************************************************************************************************************************************************************************** */\n/**\n * Object contains functions for views\n *\n * @var {object}\n */\nconst views = {\n\t/**\n\t * Gestion of view lobby\n\t *\n\t * @return  {promise}  Fonctionnalités et affichage de la vue lobby\n\t */\n\tlobby: async function () {\n\t\tnew Header(body, tagsChecked, "header");\n\t\tnew BtContact(body, {\n\t\t\tclassName: "goToContent",\n\t\t\ttype: "button",\n\t\t\ttext: "Passer au contenu",\n\t\t});\n\t\tawait utils.displayPhotographersCards(tagsChecked);\n\t\tutils.tagsManage();\n\t\tdocument.addEventListener("scroll", utils.goToContentManage);\n\t},\n\n\t/**\n\t * Gestion of view photographer\n\t *\n\t * @return  {promise}  Fonctionnalités et affichage de la vue photographer\n\t */\n\tphotographer: async function () {\n\t\ttagsChecked = [];\n\t\tnew Header(body, tagsChecked, "header", "header-photographer");\n\t\tawait utils.displayPhotographersCardsBig(id);\n\t\tutils.tagsManage();\n\t},\n\n\t/**\n\t * Gestion of view lightbox\n\t *\n\t * @return  {void}  Fonctionnalités et affichage de la vue lightbox\n\t */\n\tlightbox: function () {},\n\n\t/**\n\t * Gestion of view formModal\n\t *\n\t * @return  {void}  Fonctionnalités et affichage de la vue formModal\n\t */\n\tformModal: function () {},\n};\n\n// @ts-ignore\nwindow.goHome = utils.razLobby;\nviews.lobby();\n\n\n//# sourceURL=webpack://p6/./src/app.js_+_6_modules?')}},__webpack_exports__={};__webpack_modules__[394]()})();