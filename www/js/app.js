(()=>{"use strict";var __webpack_modules__={40:()=>{eval('\n;// CONCATENATED MODULE: ./src/services/dataManager.js\nlet data;\nlet photographer;\nlet mediasChosen = [];\nasync function fetchPhotographers() {\n\tconst res = await fetch("./data/FishEyeData.json");\n\tdata = await res.json();\n\treturn data.photographers;\n}\n\n/**\n * @param {any} id\n */\nasync function fetchChosenPhotographer(id) {\n\tawait fetchPhotographers();\n\tdata.photographers.forEach((data) => {\n\t\tif (data.id == id) {\n\t\t\tphotographer = data;\n\t\t}\n\t});\n\treturn photographer;\n}\n\n/**\n * @param {any} id\n */\nasync function fetchChosenMedia(id) {\n\tconst res = await fetch("./data/FishEyeData.json");\n\tdata = await res.json();\n\tdata.media.forEach((data) => {\n\t\tif (data.photographerId == id) {\n\t\t\tmediasChosen.push(data);\n\t\t}\n\t});\n\treturn mediasChosen;\n}\n\n\n\n;// CONCATENATED MODULE: ./src/components/photographer-card/photographer-card.js\n\n/**\n * Carte du photographe dans le lobby\n */\nclass PhotographerCard {\n\t/**\n\t * @param {HTMLElement} domTarget\n\t * @param {{ tags: any; portrait?: any; name?: any; city?: any; country?: any; tagline?: any; price?: any; id?: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.imgLink = "./img/PhotographersIDPhotos/" + props.portrait;\n\t\tthis.name = props.name;\n\t\tthis.location = props.city + ", " + props.country;\n\t\tthis.tagline = props.tagline;\n\t\tthis.price = props.price + "€/jour";\n\t\tthis.tags = props.tags;\n\t\tthis.id = props.id;\n\t\tthis.render(domTarget);\n\t}\n\n\t/**\n\t * @param {HTMLElement} domTarget\n\t */\n\trender(domTarget) {\n\t\tthis.DOM = document.createElement("article");\n\t\tthis.DOM.classList.add("photographer-card");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.button = document.createElement("a");\n\t\tthis.button.tabIndex = 0;\n\t\tthis.button.classList.add("photographer-card-link");\n\t\tthis.button.id = this.id;\n\t\tthis.DOM.appendChild(this.button);\n\t\tthis.goPhotographerPageWithEnter();\n\t\tthis.goPhotographerPage();\n\t\tthis.imgContainer = document.createElement("div");\n\t\tthis.imgContainer.classList.add("photographer-card-link-imgContainer");\n\t\tthis.button.appendChild(this.imgContainer);\n\t\tthis.insertImg();\n\t\tthis.imgContainer.appendChild(this.img);\n\t\tthis.h2 = document.createElement("h2");\n\t\tthis.h2.textContent = this.name;\n\t\tthis.button.appendChild(this.h2);\n\t\tthis.insertLocationElm();\n\t\tthis.insertTagline();\n\t\tthis.priceElm = document.createElement("p");\n\t\tthis.priceElm.classList.add("price");\n\t\tthis.priceElm.textContent = this.price;\n\t\tthis.DOM.appendChild(this.priceElm);\n\t\tthis.nav = document.createElement("nav");\n\t\tthis.nav.title = this.name + " Tags";\n\t\tthis.tags.forEach((/** @type {any} */ tag) => {\n\t\t\tnew Tags(this.nav, "", tag, "tags");\n\t\t});\n\t\tthis.DOM.appendChild(this.nav);\n\t}\n\n\tgoPhotographerPageWithEnter() {\n\t\tthis.button.onkeyup = (e) => {\n\t\t\tif (e.keyCode === 13) {\n\t\t\t\twindow.location.href = "./photographer.html?id=" + this.button.id;\n\t\t\t\treturn this.id;\n\t\t\t}\n\t\t};\n\t}\n\n\tgoPhotographerPage() {\n\t\tthis.button.onclick = () => {\n\t\t\twindow.location.href = "./photographer.html?id=" + this.button.id;\n\t\t\treturn this.id;\n\t\t};\n\t}\n\n\tinsertTagline() {\n\t\tthis.taglineElm = document.createElement("p");\n\t\tthis.taglineElm.classList.add("tagline");\n\t\tthis.taglineElm.textContent = this.tagline;\n\t\tthis.DOM.appendChild(this.taglineElm);\n\t}\n\n\tinsertImg() {\n\t\tthis.img = document.createElement("img");\n\t\tthis.img.src = this.imgLink;\n\t\tthis.img.alt = "";\n\t\t// this.img.setAttribute("width", "208px");\n\t\t// this.img.setAttribute("height", "208px");\n\t}\n\n\tinsertLocationElm() {\n\t\tthis.locationElm = document.createElement("p");\n\t\tthis.locationElm.classList.add("location");\n\t\tthis.locationElm.textContent = this.location;\n\t\tthis.DOM.appendChild(this.locationElm);\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/main-lobby/main-lobby.js\n\n\nclass MainLobby {\n\t/**\n\t * @param {HTMLElement} domTarget\n\t * @param {{ photographers: any; tagsChecked: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.photographers = props.photographers;\n\t\tthis.tagsChecked = props.tagsChecked;\n\n\t\tthis.DOM = document.createElement("main");\n\t\tthis.DOM.setAttribute("id", "main");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.photographers.forEach(\n\t\t\t(/** @type {{ tags: any[]; }} */ photographer) => {\n\t\t\t\tif (this.tagsChecked === undefined || this.tagsChecked.length === 0) {\n\t\t\t\t\tnew PhotographerCard(this.DOM, {\n\t\t\t\t\t\t...photographer,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst test = photographer.tags.some((tag) =>\n\t\t\t\t\t\tthis.tagsChecked.includes("#" + tag)\n\t\t\t\t\t);\n\t\t\t\t\tif (test) {\n\t\t\t\t\t\tnew PhotographerCard(this.DOM, {\n\t\t\t\t\t\t\t...photographer,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/tags/tags.js\n\n\nclass Tags {\n\t/**\n\t * @param {HTMLElement} domTarget\n\t * @param {string | any[]} photographers\n\t * @param {string} tag\n\t * @param {string} className\n\t * @param {string} [className2]\n\t * @param {any[]} [tagsChecked]\n\t */\n\tconstructor(\n\t\tdomTarget,\n\t\tphotographers,\n\t\ttag,\n\t\tclassName,\n\t\tclassName2,\n\t\ttagsChecked\n\t) {\n\t\tthis.photographers = photographers;\n\t\tthis.tag = tag;\n\t\tthis.className = [className];\n\t\tif (className2) {\n\t\t\tthis.className.push(className2);\n\t\t}\n\t\tthis.tagsChecked = tagsChecked;\n\t\tthis.DOM = document.createElement("button");\n\t\tthis.className.forEach((newClass) => {\n\t\t\tthis.DOM.classList.add(newClass);\n\t\t});\n\t\tthis.DOM.textContent = "#" + this.tag;\n\t\tthis.DOM.title = "tag";\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.DOM.onclick = () => this.tagsManage(this.DOM);\n\t\tthis.addDisabled(this.DOM);\n\t}\n\n\t/**\n\t * @param {HTMLButtonElement} element\n\t */\n\ttagsManage(element) {\n\t\tthis.tagsCheckedManager(element);\n\t\tthis.pagesManager();\n\t}\n\n\tpagesManager() {\n\t\tif (window.location.pathname.split("/").pop() == "") {\n\t\t\tconst body = document.querySelector("body");\n\t\t\tif (document.querySelector("main")) {\n\t\t\t\tbody.removeChild(document.querySelector("main"));\n\t\t\t}\n\t\t\tnew MainLobby(body, {\n\t\t\t\tphotographers: this.photographers,\n\t\t\t\ttagsChecked: this.tagsChecked,\n\t\t\t});\n\t\t} else {\n\t\t\twindow.location.href = "./?tag=" + this.tag;\n\t\t}\n\t}\n\n\t/**\n\t * @param {HTMLButtonElement} element\n\t */\n\ttagsCheckedManager(element) {\n\t\tif (!element.hasAttribute("isChecked")) {\n\t\t\telement.setAttribute("isChecked", "true");\n\t\t\tthis.tagsChecked.push(element.innerHTML);\n\t\t} else {\n\t\t\telement.removeAttribute("isChecked");\n\t\t\tthis.tagsChecked.splice(this.tagsChecked.indexOf(element.innerHTML), 1);\n\t\t}\n\t}\n\n\t/**\n\t * @param {HTMLButtonElement} button\n\t */\n\taddDisabled(button) {\n\t\tif (this.className.length === 1) {\n\t\t\tbutton.disabled = true;\n\t\t}\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/header/header.js\n\n/**\n * Composant header\n */\nclass Header {\n\t/**\n\t * @param   {HTMLElement}  domTarget  Element parent du composant\n\t * @param {array} photographers Tableau des photographes\n\t * @param {array} tagsChecked Tableau contenant les tags sélectionnés\n\t * @param   {String}  className  Class\n\t * @param   {String}  [className2]  Seconde class(optionnel)\n\t */\n\tconstructor(domTarget, photographers, tagsChecked, className, className2) {\n\t\tthis.photographers = photographers;\n\t\tthis.tagsChecked = tagsChecked;\n\t\tthis.className = [className];\n\t\tif (className2) this.className.push(className2);\n\t\tthis.tagsValueArray = [\n\t\t\t"portrait",\n\t\t\t"art",\n\t\t\t"fashion",\n\t\t\t"architecture",\n\t\t\t"travel",\n\t\t\t"sports",\n\t\t\t"animals",\n\t\t\t"events",\n\t\t];\n\t\tthis.DOM = document.createElement("header");\n\t\tthis.className.forEach((newClass) => {\n\t\t\tthis.DOM.classList.add(newClass);\n\t\t});\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.logoBt = document.createElement("button");\n\t\tthis.logoBt.classList.add("logo");\n\t\tthis.logoBt.title = "logo";\n\t\tthis.DOM.appendChild(this.logoBt);\n\t\tthis.logoBt.onclick = this.goHome;\n\t\tthis.logoImg = document.createElement("img");\n\t\tthis.logoImg.src = "./img/logo/logo.svg";\n\t\tthis.logoImg.alt = "Fisheye Home page";\n\t\tthis.logoBt.appendChild(this.logoImg);\n\t\tif (this.className.length === 1) {\n\t\t\tthis.h1 = document.createElement("h1");\n\t\t\tthis.h1.classList.add("lobbyH1");\n\t\t\tthis.h1.textContent = "Nos photographes";\n\t\t\tthis.DOM.appendChild(this.h1);\n\t\t\tthis.nav = document.createElement("nav");\n\t\t\tthis.tagsValueArray.forEach((tagValue) => {\n\t\t\t\tnew Tags(\n\t\t\t\t\tthis.nav,\n\t\t\t\t\tthis.photographers,\n\t\t\t\t\ttagValue,\n\t\t\t\t\t"tags",\n\t\t\t\t\t"tags-link",\n\t\t\t\t\tthis.tagsChecked\n\t\t\t\t);\n\t\t\t});\n\t\t\tthis.DOM.appendChild(this.nav);\n\t\t\tthis.tags = document.querySelectorAll(".tags-link");\n\t\t\tthis.tagsChecked.forEach((tagChecked) => {\n\t\t\t\tthis.tags.forEach((tag) => {\n\t\t\t\t\tif (tag.innerHTML == tagChecked) {\n\t\t\t\t\t\ttag.setAttribute("isChecked", "true");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\t/**\n\t * Retour accueil\n\t */\n\tgoHome() {\n\t\twindow.location.href = "./";\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/btContact/btContact.js\n/**\n * Composants boutons de constact et "GoToContent"\n */\nclass BtContact {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLButtonElement) => void; }} domtarget\n\t * @param {{ className: string | any[]; className2: string | any; type: string; text: string; name: string; }} props\n\t */\n\tconstructor(domtarget, props) {\n\t\tthis.DOM = document.createElement("button");\n\t\tif (typeof props.className === "string")\n\t\t\tprops.className = [props.className];\n\t\tif (props.className2) props.className.push(props.className2);\n\t\tprops.className.forEach((newClass) => {\n\t\t\tthis.DOM.classList.add(newClass);\n\t\t});\n\t\tthis.DOM.type = props.type;\n\t\tthis.DOM.textContent = props.text;\n\t\tthis.name = props.name;\n\t\tif (this.DOM.classList.contains("goToContent")) {\n\t\t\twindow.onscroll = () => this.scrollHandler();\n\t\t\tthis.DOM.onclick = this.goToContent;\n\t\t}\n\t\tif (this.DOM.classList.contains("btContact")) {\n\t\t\tthis.DOM.title = "Contact me " + this.name;\n\t\t\tthis.DOM.onclick = this.goFormContact;\n\t\t}\n\t\tdomtarget.appendChild(this.DOM);\n\t\tthis.visible = false;\n\t}\n\t/**\n\t * Ouverture du formulaire de contact\n\t */\n\tgoFormContact() {\n\t\tconst bground = document.querySelector(".bground");\n\t\tbground.setAttribute("visible", "true");\n\t\tbground.parentElement.style.overflow = "hidden";\n\t\tthis.buttons = document.querySelectorAll("button");\n\t\tfor (let i = 0; i < this.buttons.length - 3; i++) {\n\t\t\tconst elm = this.buttons[i];\n\t\t\telm.setAttribute("disabled", "");\n\t\t}\n\t\tthis.widgetLabel = document.getElementById("select");\n\t\tthis.widgetLabel.removeAttribute("tabindex");\n\t}\n\t/**\n\t * Dirige vers le "main"\n\t */\n\tgoToContent() {\n\t\twindow.location.href = "#main";\n\t}\n\t/**\n\t * Affichage de "GoToContent" lors du scroll vers le bas\n\t */\n\tscrollHandler() {\n\t\tconst shouldBeVisible = window.scrollY > 20;\n\t\tif (this.visible === shouldBeVisible) return;\n\t\tthis.DOM.setAttribute("visible", shouldBeVisible.toString());\n\t\tthis.visible = shouldBeVisible;\n\t\tconsole.log(this);\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/index/index.js\n\n\n\n\nclass Index {\n\tconstructor(domTarget, props) {\n\t\tthis.photographers = props.photographers;\n\t\tthis.tagsChecked = [];\n\t\tthis.url = new URL(window.location.href);\n\t\tthis.tag = this.url.searchParams.get("tag");\n\t\tif (this.tag) {\n\t\t\tthis.tagsChecked.push("#" + this.tag);\n\t\t}\n\t\tnew Header(domTarget, this.photographers, this.tagsChecked, "header");\n\t\tnew BtContact(domTarget, {\n\t\t\tclassName: "goToContent",\n\t\t\tclassName2: null,\n\t\t\ttype: "button",\n\t\t\ttext: "Passer au contenu",\n\t\t\tname: "",\n\t\t});\n\t\tnew MainLobby(domTarget, {\n\t\t\tphotographers: this.photographers,\n\t\t\ttagsChecked: this.tagsChecked,\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/photographer-card-big/photographer-card-big.js\n\n\n\n\n/**\n * Carte du photographe dans sa page perso\n */\nclass PhotographerCardBig extends PhotographerCard {\n\t/**\n\t * @param {HTMLElement} domTarget\n\t * @param {{ tags: any; portrait?: any; name?: any; city?: any; country?: any; tagline?: any; price?: any; id?: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tsuper(domTarget, props);\n\t}\n\n\t/**\n\t * @param {HTMLElement} domTarget\n\t */\n\trender(domTarget) {\n\t\tthis.tagsChecked = [];\n\t\tthis.DOM = document.createElement("article");\n\t\tthis.DOM.classList.add("photographer-card-big");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.photographerCardBigImgContainer = document.createElement("div");\n\t\tthis.photographerCardBigImgContainer.classList.add(\n\t\t\t"photographer-card-link-imgContainer",\n\t\t\t"photographer-card-big-imgContainer"\n\t\t);\n\t\tthis.DOM.appendChild(this.photographerCardBigImgContainer);\n\t\tthis.insertImg();\n\t\tthis.photographerCardBigImgContainer.appendChild(this.img);\n\t\tthis.h2 = document.createElement("h2");\n\t\tthis.h2.textContent = this.name;\n\t\tthis.DOM.appendChild(this.h2);\n\t\tthis.insertLocationElm();\n\t\tthis.insertTagline();\n\t\tthis.nav = document.createElement("nav");\n\t\tthis.tags.forEach((/** @type {any} */ tag) => {\n\t\t\tnew Tags(this.nav, "", tag, "tags", "tags-link", this.tagsChecked);\n\t\t});\n\t\tthis.DOM.appendChild(this.nav);\n\t\tthis.insertBtContactDesktop(this.DOM);\n\t\tthis.insertBtContactMobile(this.DOM);\n\t}\n\n\tinsertTagline() {\n\t\tthis.taglineElm = document.createElement("p");\n\t\tthis.taglineElm.classList.add("tagline");\n\t\tthis.taglineElm.textContent = this.tagline;\n\t\tthis.DOM.appendChild(this.taglineElm);\n\t}\n\n\tinsertImg() {\n\t\tthis.img = document.createElement("img");\n\t\tthis.img.src = this.imgLink;\n\t\tthis.img.alt = "";\n\t}\n\n\tinsertLocationElm() {\n\t\tthis.locationElm = document.createElement("p");\n\t\tthis.locationElm.classList.add("location");\n\t\tthis.locationElm.textContent = this.location;\n\t\tthis.DOM.appendChild(this.locationElm);\n\t}\n\n\t/**\n\t * @param {HTMLElement} article\n\t */\n\tinsertBtContactDesktop(article) {\n\t\tnew BtContact(article, {\n\t\t\tclassName: "btContact",\n\t\t\tclassName2: "btContact-desktop",\n\t\t\ttype: "button",\n\t\t\ttext: "Contactez moi",\n\t\t\tname: this.name,\n\t\t});\n\t}\n\n\t/**\n\t * @param {HTMLElement} article\n\t */\n\tinsertBtContactMobile(article) {\n\t\tnew BtContact(article, {\n\t\t\tclassName: "btContact",\n\t\t\tclassName2: "btContact-mobile",\n\t\t\ttype: "button",\n\t\t\ttext: "Contactez moi",\n\t\t\tname: this.name,\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/widget/widget.js\n// @ts-nocheck\nclass Widget {\n\t/**\n\t * @param {HTMLElement} domTarget\n\t */\n\tconstructor(domTarget) {\n\t\tthis.DOM = document.createElement("div");\n\t\tthis.DOM.classList.add("no-widget");\n\t\tthis.DOM.id = "widget";\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.render();\n\t}\n\trender() {\n\t\tthis.DOM.innerHTML += /* html */ `\n\t\t\t<label>Trier par</label>\n\t\t\t\t<form>\n\t\t\t\t<label for="popularite" id="label">Tri</label>\n\t\t\t\t\t<select name="popularite" id="popularite">\n\t\t\t\t\t\t<option>Popularité</option>\n\t\t\t\t\t\t<option>Date</option>\n\t\t\t\t\t\t<option>Titre</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<div class="select" tabindex="0" id="select" role="listbox" aria-label="Toggle blue light">\n\t\t\t\t\t\t\x3c!-- Ce containeur sera utilisé pour afficher la valeur courante du widget --\x3e\n\t\t\t\t\t\t<span class="value">Popularité</span>\n\t\t\t\t\t\t\x3c!-- Ce conteneur contiendra toutes les options disponibles pour le widget.\n\t\t\t\t\t\tComme c\'est une liste, il y sens à utiliser l\'élément ul. --\x3e\n\t\t\t\t\t\t<ul class="optList hidden" role="presentation">\n\t\t\t\t\t\t\t\x3c!-- Chaque option ne contient que la valeur à afficher, Nous verrons plus loin\n\t\t\t\t\t\t\tcomment gérer la valeur réelle qui sera envoyée avec les données du formulaire --\x3e\n\t\t\t\t\t\t\t<li class="option" onclick="refreshMediaList(\'Popularité\')" role="option" aria-label="Popularité">Popularité</li>\n\t\t\t\t\t\t\t<li class="option" onclick="refreshMediaList(\'Date\')" role="option"aria-label="Date">Date</li>\n\t\t\t\t\t\t\t<li class="option" onclick="refreshMediaList(\'Titre\')" role="option"aria-label="Titre">Titre</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t`;\n\t\t// const widget = document.getElementById("widget");\n\t\tthis.DOM.classList.remove("no-widget");\n\t\tthis.DOM.classList.add("widget");\n\n\t\t// Cette fonction est utilisée chaque fois que nous voulons désactiver un\n\t\t// widget personnalisé. Elle prend un paramètre\n\t\t// select : le nœud DOM avec la classe select à désactiver\n\t\t/**\n\t\t * @param {Element} select\n\t\t */\n\t\tfunction deactivateSelect(select) {\n\t\t\t// Si le widget n\'est pas actif, il n\'y a rien à faire\n\t\t\tif (!select.classList.contains("active")) return;\n\t\t\t// Nous devons obtenir la liste des options pour le widget personnalisé\n\t\t\tlet optList = select.querySelector(".optList");\n\t\t\t// Nous cachons la liste des options\n\t\t\toptList.classList.add("hidden");\n\t\t\t// et nous désactivons le widget personnalisé lui-même\n\t\t\tselect.classList.remove("active");\n\t\t}\n\n\t\t// Cette fonction sera utilisée chaque fois que l\'utilisateur veut (des)activer le widget\n\t\t// Elle prend deux paramètres :\n\t\t// select : le nœud DOM de la classe `select` à activer\n\t\t// selectList : la liste de tous les nœuds DOM de la classe `select`\n\t\t/**\n\t\t * @param {Element} select\n\t\t * @param {NodeListOf<Element> | Element[]} selectList\n\t\t */\n\t\tfunction activeSelect(select, selectList) {\n\t\t\t// Si le widget est déjà actif il n\'y a rien à faire\n\t\t\tif (select.classList.contains("active")) return;\n\t\t\t// Nous devons désactiver tous les widgets personnalisés\n\t\t\t// comme la fonction deactivateSelect remplit toutes les fonctionnalités de la\n\t\t\t// fonction de rappel forEach, nous l\'utilisons directement sans utiliser\n\t\t\t// une fonction anonyme intermédiaire.\n\t\t\tselectList.forEach(deactivateSelect);\n\t\t\t// Et nous activons l\'état du widget donné\n\t\t\t// select.classList.add("active");\n\t\t}\n\n\t\t// Cette fonction sera utilisée chaque fois que l\'utilisateur veut enrouler/dérouler la\n\t\t// liste des options\n\t\t// Elle prend un paramètre :\n\t\t// select : le nœud DOM de la liste à basculer\n\t\t/**\n\t\t * @param {Element} select\n\t\t */\n\t\tfunction toggleOptList(select) {\n\t\t\t// La liste est prise à partir du widget\n\t\t\tlet optList = select.querySelector(".optList");\n\t\t\t// Nous changeons la classe de la liste pour l\'enrouler/dérouler\n\t\t\toptList.classList.toggle("hidden");\n\t\t\tselect.classList.toggle("active");\n\t\t}\n\n\t\t// Cett fonction sera utilisée chaque fois qu\'il faut mettre en surbrillance\n\t\t// une option.  Elle prend deux paramètres :\n\t\t// select : le nœud DOM de la classe `select`\n\t\t//          contenant l\'option à mettre en surbrillance\n\t\t// option : le nœud DOM de la classe `option` à mettre en surbrillance\n\t\t/**\n\t\t * @param {Element} select\n\t\t * @param {Element} option\n\t\t */\n\t\tfunction highlightOption(select, option) {\n\t\t\t// Obtenir la liste de toutes les options disponibles pour l\'élémént sélectionné\n\t\t\tlet optionList = select.querySelectorAll(".option");\n\t\t\t// Supprimer la surbrillance pour toutes les options\n\t\t\toptionList.forEach(function (other) {\n\t\t\t\tother.classList.remove("highlight");\n\t\t\t});\n\t\t\t// Mettre en surbrillance l\'option correcte\n\t\t\toption.classList.add("highlight");\n\t\t}\n\n\t\t// Nous lions le widget aux événements dès le chargement du document\n\t\tlet selectList = document.querySelectorAll(".select");\n\t\t// Chaque widget personnalisé doit être initialisé\n\t\tselectList.forEach(function (select) {\n\t\t\t// de même que tous les éléments `option`\n\t\t\tlet optionList = select.querySelectorAll(".option");\n\t\t\t// Chaque fois que l\'utilisateur passe le pointeur de souris\n\t\t\t// sur une option, nous mettons en surbrillance la dite option\n\t\t\toptionList.forEach(function (option) {\n\t\t\t\toption.addEventListener("mouseover", function () {\n\t\t\t\t\t// Note : les variables `select` et `option` sont des "closures"\n\t\t\t\t\t// disponibles dans la portée de notre appel de fonction.\n\t\t\t\t\thighlightOption(select, option);\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Chaque fois que l\'utilisateur clique sur un élément personnalisé\n\t\t\tselect.addEventListener("click", function () {\n\t\t\t\t// Note : la variable `select` est une "closure"\n\t\t\t\t// available dans la portée de notre appel de fonction.\n\t\t\t\t// Nous basculons la visibilité de la liste des options\n\t\t\t\ttoggleOptList(select);\n\t\t\t});\n\t\t\t// Dans le cas où le widget obtient le focus\n\t\t\t// Le widget obtient le focus chaque fois que l\'utilisateur clique dessus\n\t\t\t// ou presse la touche Tab pour avoir accès au widget\n\t\t\tselect.addEventListener("focus", function () {\n\t\t\t\t// Note : les variable `select` et `selectList` sont des "closures"\n\t\t\t\t// disponibles dans la portée de notre appel de fonction.\n\t\t\t\t// Nous activons le widget\n\t\t\t\tactiveSelect(select, selectList);\n\t\t\t});\n\t\t\t// Dans le cas où le widget perd le focus\n\t\t\tselect.addEventListener("blur", function () {\n\t\t\t\t// Note : la variable `select` est une "closure"\n\t\t\t\t// disponible dans la portée de notre appel de fonction.\n\t\t\t\t// Nous désactivons le widget\n\t\t\t\tdeactivateSelect(select);\n\t\t\t});\n\t\t});\n\t\t// Cette fonction met à jour la valeur affichée et la synchronise avec celle\n\t\t// du widget natif. Elle prend deux paramètres :\n\t\t// select : le nœud DOM de la classe `select` contenant la valuer à mettre à jour\n\t\t// index  : l\'index de la valeur choisie\n\t\t/**\n\t\t * @param {Element} select\n\t\t * @param {number} index\n\t\t */\n\t\tfunction updateValue(select, index) {\n\t\t\t// Nous devons obtenir le widget natif correspondant au widget personnalisé\n\t\t\t// Dans notre exemple, le widget natif est un parent du widget personnalisé\n\t\t\tlet nativeWidget = select.previousElementSibling;\n\t\t\t// Nou devons aussi obtenir la valeur de remplacement du widget personnalisé\n\t\t\tlet value = select.querySelector(".value");\n\t\t\t// Et nous avons besoin de toute la liste des options\n\t\t\tlet optionList = select.querySelectorAll(".option");\n\t\t\t// Nous nous assurons qu\'aucune option n\'est sélectionnée\n\t\t\toptionList.forEach(function (other) {\n\t\t\t\tother.setAttribute("aria-selected", "false");\n\t\t\t});\n\t\t\t// Nous nous assurons que l\'option choisie est sélectionnée\n\t\t\toptionList[index].setAttribute("aria-selected", "true");\n\t\t\t// Nous définissons l\'index choisi à l\'index du choix\n\t\t\tnativeWidget.selectedIndex = index;\n\t\t\t// Nous mettons à jour la valeur de remplacement en accord\n\t\t\tvalue.innerHTML = optionList[index].innerHTML;\n\t\t\t// Et nous mettons en surbrillance l\'option correspondante du widget personnalisé\n\t\t\thighlightOption(select, optionList[index]);\n\t\t}\n\n\t\t// Cette fonction renvoie l\'index courant dans le widget natif\n\t\t// Elle prend un paramètre :\n\t\t// select : le nœud DOM avec la classe `select` relative au widget natif\n\t\t/**\n\t\t * @param {Element} select\n\t\t */\n\t\tfunction getIndex(select) {\n\t\t\t// Nous avons besoin d\'avoir accès au widget natif pour le widget personnalisé\n\t\t\t// Dans notre exemple, le widget natif est un parent du widget personnalisé\n\n\t\t\tlet nativeWidget = select.previousElementSibling;\n\t\t\treturn nativeWidget.selectedIndex;\n\t\t}\n\n\t\t// Nous lions le widget aux événements dès le chargement du document\n\n\t\t// let selectList = document.querySelectorAll(".select");\n\t\t// Chaque widget personnalisé doit être initialisé\n\t\tselectList.forEach(function (select) {\n\t\t\tlet optionList = select.querySelectorAll(".option"),\n\t\t\t\tselectedIndex = getIndex(select);\n\t\t\t// Nous rendons le widget personnalisé capable d\'avoir le focus\n\t\t\tselect.tabIndex = 0;\n\t\t\t// Nous faisons en sorte que le widget natif ne puisse plus avoir le focus\n\t\t\tselect.previousElementSibling.tabIndex = -1;\n\t\t\t// Nous nous assurons que la valeur sélectionnée par défaut est bien affichée\n\t\t\tupdateValue(select, selectedIndex);\n\t\t\t// Chaque fois que l\'utilisateur clique sur une option, nous mettons à\n\t\t\t// jour la valeur en accord\n\t\t\toptionList.forEach(function (option, index) {\n\t\t\t\toption.addEventListener("click", function () {\n\t\t\t\t\tupdateValue(select, index);\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Chaque fois que l\'utilisateur utilise le clavier sur un widget\n\t\t\t// avec focus, les valeurs sont mises à jour en accord\n\t\t\tselect.addEventListener("keyup", function (e) {\n\t\t\t\tlet length = optionList.length,\n\t\t\t\t\tindex = getIndex(select);\n\t\t\t\t// Quand l\'utilisateur presse ⇓, nous allons à l\'option suivante\n\t\t\t\tif (e.keyCode === 40 && index < length - 1) {\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\t// Quand l\'utilisateur presse ⇑, nous sautons à l\'option suivante\n\t\t\t\tif (e.keyCode === 38 && index > 0) {\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\t// Quand l\'utilisateur presse enter, nous mettons à jour la valeur en accord\n\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\tlet optList = select.querySelector(".optList");\n\t\t\t\t\t// Nous changeons la classe de la liste pour l\'enrouler/dérouler\n\t\t\t\t\toptList.classList.toggle("hidden");\n\t\t\t\t\tselect.classList.toggle("active");\n\t\t\t\t\tif (!select.classList.contains("active")) {\n\t\t\t\t\t\tlet valueElm = document.querySelector(".value");\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\twindow.refreshMediaList(valueElm.innerHTML);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdateValue(select, index);\n\t\t\t});\n\t\t});\n\t\tconst label = document.querySelector("label");\n\t\tconst select = document.querySelector(".select");\n\t\tlabel.addEventListener("click", () => {\n\t\t\ttoggleOptList(select);\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/lightBox/lightBox.js\nclass LightBox {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLElement) => void; }} domTarget\n\t * @param {{ imgTitle: any; medias: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.imgTitle = props.imgTitle;\n\t\tthis.medias = props.medias;\n\t\tthis.DOM = document.createElement("section");\n\t\tthis.DOM.id = "lightBox";\n\t\tthis.DOM.setAttribute("aria-hidden", "false");\n\t\tthis.DOM.setAttribute("role", "dialog");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.displayCard = document.createElement("nav");\n\t\tthis.displayCard.id = "displayCard";\n\t\tthis.DOM.appendChild(this.displayCard);\n\t\tthis.close = document.createElement("button");\n\t\tthis.close.type = "button";\n\t\tthis.close.classList.add("close");\n\t\tthis.close.title = "Close dialog";\n\t\tthis.close.focus();\n\t\tthis.displayCard.appendChild(this.close);\n\t\tthis.close.onclick = () => {\n\t\t\tthis.closeLightbox();\n\t\t};\n\t\tthis.leftArrow = document.createElement("button");\n\t\tthis.leftArrow.type = "button";\n\t\tthis.leftArrow.classList.add("arrow");\n\t\tthis.leftArrow.id = "leftArrow";\n\t\tthis.leftArrow.title = "Previous image";\n\t\tthis.displayCard.appendChild(this.leftArrow);\n\n\t\tthis.imgContainer = document.createElement("div");\n\t\tthis.imgContainer.id = "imgContainer";\n\t\tthis.displayCard.appendChild(this.imgContainer);\n\t\tthis.rightArrow = document.createElement("button");\n\t\tthis.rightArrow.type = "button";\n\t\tthis.rightArrow.classList.add("arrow");\n\t\tthis.rightArrow.id = "rightArrow";\n\t\tthis.rightArrow.title = "Next image";\n\t\tthis.displayCard.appendChild(this.rightArrow);\n\t\tthis.p = document.createElement("p");\n\t\tthis.DOM.appendChild(this.p);\n\n\t\tfor (let i = 0; i < this.medias.length; i++) {\n\t\t\tif (this.medias[i].title === this.imgTitle) {\n\t\t\t\tif (this.medias[i].image) {\n\t\t\t\t\tthis.displayImage(i);\n\t\t\t\t} else {\n\t\t\t\t\tthis.displayVideo(i);\n\t\t\t\t}\n\t\t\t\ti = this.changeImage(i);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tdisplayVideo(i) {\n\t\tthis.deletePreviousImage();\n\t\tthis.createVideo(i);\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tcreateVideo(i) {\n\t\tthis.video = document.createElement("video");\n\t\tthis.video.controls = true;\n\t\tthis.video.autoplay = true;\n\t\tthis.video.setAttribute("aria-label", this.medias[i].description);\n\t\tthis.imgContainer.appendChild(this.video);\n\t\tthis.source = document.createElement("source");\n\t\tthis.source.src = "./img/videos/" + this.medias[i].video;\n\t\tthis.source.type = "video/mp4";\n\t\tthis.video.appendChild(this.source);\n\t\tthis.p.textContent = this.medias[i].title;\n\t}\n\n\tdeletePreviousImage() {\n\t\tlet video = this.DOM.querySelector("video");\n\t\tlet image = this.DOM.querySelector("img");\n\t\tif (video) {\n\t\t\tthis.video.parentElement.removeChild(this.video);\n\t\t}\n\t\tif (image) {\n\t\t\tthis.img.parentElement.removeChild(this.img);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tdisplayImage(i) {\n\t\tthis.deletePreviousImage();\n\t\tthis.createImg(i);\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tcreateImg(i) {\n\t\tthis.img = document.createElement("img");\n\t\tthis.img.alt = "";\n\t\tthis.imgContainer.appendChild(this.img);\n\t\tthis.img.src = "./img/photos/" + this.medias[i].image;\n\t\tthis.img.title = this.medias[i].title;\n\t\tthis.img.alt = this.medias[i].description;\n\t\tthis.img.setAttribute("aria-label", "Lilac breasted roller");\n\t\tthis.img.setAttribute("tabindex", "0");\n\t\tthis.p.textContent = this.medias[i].title;\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tchangeImage(i) {\n\t\tthis.rightArrow.onclick = () => {\n\t\t\ti = this.goRight(i);\n\t\t};\n\t\tthis.leftArrow.onclick = () => {\n\t\t\ti = this.goLeft(i);\n\t\t};\n\t\tdocument.onkeyup = (e) => {\n\t\t\ti = this.keyManager(e, i);\n\t\t};\n\t\treturn i;\n\t}\n\n\t/**\n\t * @param {KeyboardEvent} e\n\t * @param {number} i\n\t */\n\tkeyManager(e, i) {\n\t\tif (e.keyCode === 37) {\n\t\t\ti = this.goLeft(i);\n\t\t}\n\t\tif (e.keyCode === 39) {\n\t\t\ti = this.goRight(i);\n\t\t}\n\t\tif (e.keyCode === 27) {\n\t\t\tthis.closeLightbox();\n\t\t}\n\t\treturn i;\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tgoLeft(i) {\n\t\tif (i !== 0) {\n\t\t\ti--;\n\t\t\tif (this.medias[i].image) {\n\t\t\t\tthis.displayImage(i);\n\t\t\t} else {\n\t\t\t\tthis.displayVideo(i);\n\t\t\t}\n\t\t} else {\n\t\t\ti = this.medias.length - 1;\n\t\t\tif (this.medias[i].image) {\n\t\t\t\tthis.displayImage(i);\n\t\t\t} else {\n\t\t\t\tthis.displayVideo(i);\n\t\t\t}\n\t\t}\n\t\treturn i;\n\t}\n\n\t/**\n\t * @param {number} i\n\t */\n\tgoRight(i) {\n\t\tif (i !== this.medias.length - 1) {\n\t\t\ti++;\n\t\t\tif (this.medias[i].image) {\n\t\t\t\tthis.displayImage(i);\n\t\t\t} else {\n\t\t\t\tthis.displayVideo(i);\n\t\t\t}\n\t\t} else {\n\t\t\ti = 0;\n\t\t\tif (this.medias[i].image) {\n\t\t\t\tthis.displayImage(i);\n\t\t\t} else {\n\t\t\t\tthis.displayVideo(i);\n\t\t\t}\n\t\t}\n\t\treturn i;\n\t}\n\n\tcloseLightbox() {\n\t\tthis.DOM.parentElement.style.overflow = "auto";\n\t\tthis.DOM.parentElement.setAttribute("aria-hidden", "false");\n\t\tthis.DOM.parentNode.removeChild(this.DOM);\n\t\tthis.buttons = document.querySelectorAll("button");\n\t\tfor (let i = 0; i < this.buttons.length; i++) {\n\t\t\tconst elm = this.buttons[i];\n\n\t\t\telm.removeAttribute("disabled");\n\t\t}\n\t\tthis.widgetLabel = document.getElementById("select");\n\t\tthis.widgetLabel.setAttribute("tabindex", "0");\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/mediaCard/mediaCard.js\n\n\nclass MediaCard {\n\tconstructor(domTarget, props) {\n\t\t// this.DOM = domTarget;\n\t\tthis.imgLink = props.imgLink;\n\t\tthis.videoLink = props.videoLink;\n\t\tthis.imgTitle = props.imgTitle;\n\t\tthis.like = props.like;\n\t\tthis.medias = props.medias;\n\t\tthis.description = props.description;\n\n\t\tthis.DOM = document.createElement("article");\n\t\tthis.DOM.classList.add("mediaCard");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.buttonImg = document.createElement("button");\n\t\tthis.buttonImg.classList.add("imgContainer");\n\t\tthis.buttonImg.setAttribute("aria-label", "image closeup view");\n\t\tthis.buttonImg.title = this.imgTitle;\n\t\tthis.openLightBox(domTarget);\n\t\tthis.DOM.appendChild(this.buttonImg);\n\t\tthis.displayImgOrVideo(this.buttonImg);\n\t\tthis.infoContainer = document.createElement("div");\n\t\tthis.infoContainer.classList.add("infoContainer");\n\t\tthis.DOM.appendChild(this.infoContainer);\n\t\tthis.imgTitleElm = document.createElement("h2");\n\t\tthis.imgTitleElm.classList.add("imgTitle");\n\t\tthis.imgTitleElm.textContent = this.imgTitle;\n\t\tthis.infoContainer.appendChild(this.imgTitleElm);\n\t\tthis.likeBt = document.createElement("button");\n\t\tthis.likeBt.classList.add("like");\n\t\tthis.likeBt.setAttribute("aria-label", "likes");\n\t\tthis.likeBt.textContent = this.like;\n\t\tthis.infoContainer.appendChild(this.likeBt);\n\t\tthis.incrementLike(this.likeBt);\n\t}\n\n\topenLightBox(domTarget) {\n\t\tthis.buttonImg.onclick = () => {\n\t\t\tthis.body = domTarget.parentNode.parentNode;\n\t\t\tthis.body.setAttribute("aria-hidden", "true");\n\n\t\t\tnew LightBox(this.body, {\n\t\t\t\tmedias: this.medias,\n\t\t\t\timgTitle: this.imgTitle,\n\t\t\t});\n\t\t\twindow.scroll(0, 0);\n\t\t\tthis.body.style.overflow = "hidden";\n\t\t\tthis.buttons = document.querySelectorAll("button");\n\t\t\tfor (let i = 0; i < this.buttons.length - 3; i++) {\n\t\t\t\tconst elm = this.buttons[i];\n\t\t\t\telm.setAttribute("disabled", "");\n\t\t\t}\n\n\t\t\tthis.widgetLabel = document.getElementById("select");\n\t\t\tthis.widgetLabel.removeAttribute("tabindex");\n\t\t};\n\t}\n\n\tincrementLike(like) {\n\t\tlike.addEventListener("click", () => {\n\t\t\tif (!like.hasAttribute("bold")) {\n\t\t\t\tlike.setAttribute("bold", true);\n\t\t\t\tthis.like++;\n\t\t\t\tthis.newLike = this.like;\n\t\t\t} else {\n\t\t\t\tlike.removeAttribute("bold");\n\t\t\t\tthis.like--;\n\t\t\t}\n\t\t\tlike.textContent = this.like;\n\t\t});\n\t}\n\n\tdisplayImgOrVideo(button) {\n\t\tif (this.imgLink.indexOf(".jpg") !== -1) {\n\t\t\tthis.img = document.createElement("img");\n\t\t\tthis.img.src = this.imgLink;\n\t\t\tthis.img.alt = this.description;\n\t\t\tbutton.appendChild(this.img);\n\t\t} else {\n\t\t\tthis.video = document.createElement("video");\n\t\t\tbutton.appendChild(this.video);\n\t\t\tthis.source = document.createElement("source");\n\t\t\tthis.source.src = this.videoLink;\n\t\t\tthis.source.type = "video/mp4";\n\t\t\tthis.video.appendChild(this.source);\n\t\t}\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/mediaCardsSection/mediaCardsSection.js\n\n\nclass MediaCardsSection {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLElement) => void; }} domTarget\n\t * @param {{ photographerMedias: any; target: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.DOM = document.createElement("section");\n\t\tthis.DOM.id = "mediaCardsSection";\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.h2 = document.createElement("h2");\n\t\tthis.h2.textContent = "Media Cards";\n\t\tthis.h2.id = "mediaCards";\n\t\tthis.DOM.appendChild(this.h2);\n\t\tthis.photographerMedias = props.photographerMedias;\n\t\tthis.target = props.target;\n\t\tthis.totalLikes = 0;\n\t\tthis.popularArray = [];\n\t\tthis.dateArray = [];\n\t\tthis.titreArray = [];\n\n\t\tthis.displayMediaCardsWithFilter();\n\t}\n\n\tdisplayMediaCardsWithFilter() {\n\t\tif (this.target === "Popularité") {\n\t\t\tthis.createPopularArray(this.photographerMedias);\n\t\t\tthis.displayMediaCard(this.DOM, this.popularArray);\n\t\t}\n\t\tif (this.target === "Date") {\n\t\t\tthis.createDateArray(this.photographerMedias);\n\t\t\tthis.displayMediaCard(this.DOM, this.dateArray);\n\t\t}\n\t\tif (this.target === "Titre") {\n\t\t\tthis.createTitreArray(this.photographerMedias);\n\t\t\tthis.displayMediaCard(this.DOM, this.titreArray);\n\t\t}\n\t}\n\n\t/**\n\t * @param {any[]} medias\n\t */\n\tcreateTitreArray(medias) {\n\t\tlet arrayTitre = [];\n\t\tmedias.forEach((media) => {\n\t\t\tarrayTitre.push(media.title);\n\t\t});\n\t\tarrayTitre.sort();\n\t\tarrayTitre.forEach((title) => {\n\t\t\tmedias.forEach((media) => {\n\t\t\t\tif (title === media.title) {\n\t\t\t\t\tthis.titreArray.push(media);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.titreArray = [...new Set(this.titreArray)];\n\t}\n\n\t/**\n\t * @param {any[]} medias\n\t */\n\tcreateDateArray(medias) {\n\t\tlet arrayDate = [];\n\t\tmedias.forEach((media) => {\n\t\t\tarrayDate.push(media.date);\n\t\t});\n\t\tarrayDate.sort().reverse();\n\t\tarrayDate.forEach((date) => {\n\t\t\tmedias.forEach((media) => {\n\t\t\t\tif (date === media.date) {\n\t\t\t\t\tthis.dateArray.push(media);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.dateArray = [...new Set(this.dateArray)];\n\t}\n\n\tcreatePopularArray(medias) {\n\t\tlet arrayLikes = [];\n\t\tmedias.forEach((media) => {\n\t\t\tarrayLikes.push(media.likes);\n\t\t});\n\t\tarrayLikes.sort(function (a, b) {\n\t\t\treturn b - a;\n\t\t});\n\t\tarrayLikes.forEach((likes) => {\n\t\t\tmedias.forEach((media) => {\n\t\t\t\tif (likes === media.likes) {\n\t\t\t\t\tthis.popularArray.push(media);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.popularArray = [...new Set(this.popularArray)];\n\t}\n\n\t/**\n\t * @param {HTMLElement} section\n\t * @param {any[]} medias\n\t */\n\tdisplayMediaCard(section, medias) {\n\t\tmedias.forEach(\n\t\t\t(\n\t\t\t\t/** @type {{ photographerId: any; image: string; video: string; title: any; likes: any; description: string}} */ media\n\t\t\t) => {\n\t\t\t\tlet mediaCard = new MediaCard(section, {\n\t\t\t\t\tmedias: medias,\n\t\t\t\t\timgLink: "./img/photos/" + media.image,\n\t\t\t\t\tvideoLink: "img/videos/" + media.video,\n\t\t\t\t\timgTitle: media.title,\n\t\t\t\t\tlike: media.likes,\n\t\t\t\t\tdescription: media.description,\n\t\t\t\t});\n\t\t\t\tthis.totalLikes += mediaCard.like;\n\t\t\t}\n\t\t);\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/aside/aside.js\n/**\n * Composant "Aside" contenant le nombre de like total et le tarif journalier\n */\nclass Aside {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLElement) => void; }} domTarget\n\t * @param {{ price: string; totalLikes: string; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.DOM = document.createElement("aside");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.price = parseInt(props.price);\n\t\tthis.totalLike = parseInt(props.totalLikes);\n\t\tthis.likeElm = document.createElement("p");\n\t\tthis.likeElm.classList.add("like");\n\t\tthis.likeButtons = document.querySelectorAll("button[class=like]");\n\t\tthis.likeElm.textContent = this.totalLike.toString();\n\t\tthis.totalLikesManager();\n\t\tthis.DOM.appendChild(this.likeElm);\n\t\tthis.priceElm = document.createElement("p");\n\t\tthis.priceElm.classList.add("price");\n\t\tthis.priceElm.textContent = this.price + "€/jour";\n\t\tthis.DOM.appendChild(this.priceElm);\n\t}\n\t/**\n\t * Gestion des likes totaux\n\t */\n\ttotalLikesManager() {\n\t\tthis.likeButtons.forEach((button) => {\n\t\t\tbutton.addEventListener("click", () => {\n\t\t\t\tif (!button.hasAttribute("bold")) {\n\t\t\t\t\tthis.totalLike--;\n\t\t\t\t} else {\n\t\t\t\t\tthis.totalLike++;\n\t\t\t\t}\n\t\t\t\tthis.likeElm.textContent = this.totalLike.toString();\n\t\t\t});\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/services/utils.js\nfunction exposeMethod(methodName, method) {\n\twindow[methodName] = method;\n}\n\n\n\n;// CONCATENATED MODULE: ./src/components/photographer-main/photographer-main.js\n\n\n\n\n\n\n\nclass PhotographerMain {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLElement) => void; }} domTarget\n\t * @param {{ id: any; photographer: any; mediasChosen: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.DOM = document.createElement("main");\n\t\tthis.DOM.id = "photographer-main";\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.id = props.id;\n\t\tthis.photographer = props.photographer;\n\t\tthis.mediasChosen = props.mediasChosen;\n\t\tthis.widgetValue = "";\n\t\tnew PhotographerCardBig(this.DOM, {\n\t\t\t...this.photographer,\n\t\t});\n\t\tnew Widget(this.DOM);\n\t\tlet mediaCardsSection = new MediaCardsSection(this.DOM, {\n\t\t\tphotographerMedias: this.mediasChosen,\n\t\t\ttarget: "Popularité",\n\t\t});\n\t\tnew Aside(this.DOM, {\n\t\t\t...this.photographer,\n\t\t\tphotographerMedias: this.mediasChosen,\n\t\t\ttotalLikes: mediaCardsSection.totalLikes,\n\t\t});\n\n\t\texposeMethod("refreshMediaList", (/** @type {any} */ filter) => {\n\t\t\tthis.refresh(filter);\n\t\t});\n\t}\n\n\t/**\n\t * @param {any} filter\n\t */\n\trefresh(filter) {\n\t\tthis.DOM.removeChild(document.getElementById("mediaCardsSection"));\n\t\tthis.DOM.removeChild(document.querySelector("aside"));\n\t\tlet mediaCardsSection = new MediaCardsSection(this.DOM, {\n\t\t\tphotographerMedias: this.mediasChosen,\n\t\t\ttarget: filter,\n\t\t});\n\t\tnew Aside(this.DOM, {\n\t\t\t...this.photographer,\n\t\t\tphotographerMedias: this.mediasChosen,\n\t\t\ttotalLikes: mediaCardsSection.totalLikes,\n\t\t});\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/form-modal/form-modal.js\n/**\n * Composant formulaire de contact\n */\nclass FormModal {\n\t/**\n\t * @param {{ appendChild: (arg0: HTMLDivElement) => void; }} domTarget\n\t * @param {{ name: any; }} props\n\t */\n\tconstructor(domTarget, props) {\n\t\tthis.name = props.name;\n\t\tthis.DOM = document.createElement("div");\n\t\tthis.DOM.classList.add("bground");\n\t\tdomTarget.appendChild(this.DOM);\n\t\tthis.content = document.createElement("div");\n\t\tthis.content.classList.add("content");\n\t\tthis.DOM.appendChild(this.content);\n\t\tthis.insertBtClose();\n\t\tthis.insertFormModal();\n\t}\n\t/**\n\t * Insertion du formulaire\n\t */\n\tinsertFormModal() {\n\t\tthis.formModal = document.createElement("div");\n\t\tthis.formModal.classList.add("form-modal");\n\t\tthis.content.appendChild(this.formModal);\n\t\tthis.insertName();\n\t\tthis.insertForm();\n\t\tthis.createInput(\n\t\t\t"first",\n\t\t\t"Prénom",\n\t\t\t"text",\n\t\t\t"First name",\n\t\t\tthis.name.slice(0, this.name.indexOf(" "))\n\t\t);\n\t\tthis.createInput(\n\t\t\t"last",\n\t\t\t"Nom",\n\t\t\t"text",\n\t\t\t"Last name",\n\t\t\tthis.name.slice(this.name.indexOf(" ") + 1, this.name.length)\n\t\t);\n\t\tthis.createInput(\n\t\t\t"email",\n\t\t\t"Email",\n\t\t\t"email",\n\t\t\t"Email",\n\t\t\tthis.name.replace(" ", "_") + "@photo.com"\n\t\t);\n\t\tthis.createTextArea("message");\n\t\tthis.insertBtSubmit("mobile");\n\t\tthis.insertBtSubmit("desktop");\n\t}\n\n\t/**\n\t * @param {string} screenSize\n\t */\n\tinsertBtSubmit(screenSize) {\n\t\tthis.btSubmit = document.createElement("button");\n\t\tthis.btSubmit.classList.add(\n\t\t\t"btContact",\n\t\t\t"btContact-" + screenSize,\n\t\t\t"btContact-" + screenSize + "-modal"\n\t\t);\n\t\tthis.btSubmit.type = "submit";\n\t\tthis.btSubmit.textContent = "Envoyer";\n\t\tthis.btSubmit.setAttribute("aria-label", "Send");\n\t\tthis.form.appendChild(this.btSubmit);\n\t\tthis.btSubmit.onclick = (e) => {\n\t\t\tthis.btSubmitManager(e);\n\t\t};\n\t}\n\n\t/**\n\t * @param {MouseEvent} e\n\t */\n\tbtSubmitManager(e) {\n\t\te.preventDefault();\n\t\tthis.formChildrens = this.form.children;\n\t\tthis.formDatas = [];\n\t\tfor (let i = 0; i < this.formChildrens.length; i++) {\n\t\t\tlet elm = this.formChildrens[i];\n\t\t\tif (elm.classList.contains("formData")) {\n\t\t\t\tthis.formDatas.push(elm);\n\t\t\t}\n\t\t}\n\t\tif (this.verifDataValid(this.formDatas) === undefined) {\n\t\t\tconst prenom = this.formDatas[0].children[1].value;\n\t\t\tconst nom = this.formDatas[1].children[1].value;\n\t\t\tconst email = this.formDatas[2].children[1].value;\n\t\t\tconst message = this.formDatas[3].children[1].value;\n\t\t\tconsole.log(\n\t\t\t\t`Prenom: ${prenom}, Nom: ${nom}, Email: ${email}, Message: ${message}`\n\t\t\t);\n\t\t\tthis.content.removeChild(this.formModal);\n\t\t\tthis.validDiv = document.createElement("div");\n\t\t\tthis.validDiv.classList.add("validDiv");\n\t\t\tthis.validDiv.textContent =\n\t\t\t\t"Votre message a bien été envoyé à " + this.name;\n\t\t\tthis.content.appendChild(this.validDiv);\n\n\t\t\tthis.close.onclick = () => {\n\t\t\t\tthis.closeFormContact();\n\t\t\t\tthis.content.removeChild(this.validDiv);\n\t\t\t\tthis.insertFormModal();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @param {string | any[]} formDatas\n\t * @return {boolean} return true si aucune erreur\n\t */\n\tverifDataValid(formDatas) {\n\t\tfor (let i = 0; i < formDatas.length; i++) {\n\t\t\tconst elm = formDatas[i];\n\t\t\tif (!elm.hasAttribute("data-valid")) {\n\t\t\t\telm.setAttribute("data-error-visible", "true");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} forClassIdNameValue\n\t */\n\tcreateTextArea(forClassIdNameValue) {\n\t\tthis.insertFormData();\n\t\tthis.label = document.createElement("label");\n\t\tthis.label.setAttribute("for", forClassIdNameValue);\n\t\tthis.label.classList.add(forClassIdNameValue);\n\t\tthis.label.textContent = "Votre message";\n\t\tthis.formData.appendChild(this.label);\n\t\tthis.textArea = document.createElement("textarea");\n\t\tthis.textArea.classList.add("text-area", "text-control");\n\t\tthis.textArea.id = forClassIdNameValue;\n\t\tthis.textArea.name = forClassIdNameValue;\n\t\tthis.textArea.rows = 10;\n\t\tthis.textArea.cols = 38;\n\t\tthis.textArea.placeholder = "Minimum: 8 caractéres";\n\t\tthis.textArea.required = true;\n\t\tthis.textArea.setAttribute("aria-required", "true");\n\t\tthis.formData.appendChild(this.textArea);\n\t\tthis.verifMessage();\n\t}\n\t/**\n\t * Verification de la bonne saisie du message\n\t */\n\tverifMessage() {\n\t\tthis.textArea.oninput = (e) => {\n\t\t\t// @ts-ignore\n\t\t\tlet textAreaValue = e.target.value.trim();\n\t\t\tlet cible = this.textArea.parentElement;\n\t\t\tif (textAreaValue.length < 8) {\n\t\t\t\tthis.showError(cible, "Veuillez entrer 8 caractéres minimum");\n\t\t\t} else {\n\t\t\t\tthis.hideError(cible);\n\t\t\t}\n\t\t};\n\t}\n\t/**\n\t * @param {string} forIdNameValue\t Valeur du "for", "id", "name" des elements\n\t * @param {string} labelText\t\t\t Texte du "label"\n\t * @param {string} inputType\t\t\t Attribut "type" de l\'input\n\t * @param {string} ariaLabel\t\t\t Attribut "aria-label" de l\'element\n\t * @param {string} placeholder\tAttribut "placeholder"\n\t */\n\tcreateInput(forIdNameValue, labelText, inputType, ariaLabel, placeholder) {\n\t\tthis.insertFormData();\n\t\tthis.label = document.createElement("label");\n\t\tthis.label.setAttribute("for", forIdNameValue);\n\t\tthis.label.textContent = labelText;\n\t\tthis.formData.appendChild(this.label);\n\t\tthis.input = document.createElement("input");\n\t\tthis.input.classList.add("text-control");\n\t\tthis.input.setAttribute("aria-label", ariaLabel);\n\t\tthis.input.type = inputType;\n\t\tthis.input.id = forIdNameValue;\n\t\tthis.input.name = forIdNameValue;\n\t\tthis.input.placeholder = placeholder;\n\t\tthis.input.required = true;\n\t\tthis.input.setAttribute("aria-required", "true");\n\t\tthis.formData.appendChild(this.input);\n\t\tthis.verifInput(inputType);\n\t}\n\t/**\n\t * Verification saisie de l\'input selon son type\n\t *\n\t * @param {string} inputType\n\t */\n\tverifInput(inputType) {\n\t\tif (inputType === "text") {\n\t\t\treturn this.verifNameSurname();\n\t\t}\n\t\tthis.verifEmail();\n\t}\n\tverifNameSurname() {\n\t\t/**\n\t\t * Regex (< 2 characters; Pas de chiffres)\n\t\t */\n\t\tconst firstLastRegex = /^[^0-9_!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/;\n\t\tthis.input.oninput = (e) => {\n\t\t\t// @ts-ignore\n\t\t\tlet textValue = e.target.value.trim();\n\t\t\t// @ts-ignore\n\t\t\tlet cible = e.target.parentNode;\n\t\t\tif (textValue.length < 2) {\n\t\t\t\tthis.showError(cible, "Veuillez entrer 2 caractéres minimum");\n\t\t\t} else if (!firstLastRegex.test(textValue)) {\n\t\t\t\tthis.showError(\n\t\t\t\t\tcible,\n\t\t\t\t\t"Veuillez entrez seulement des caractéres litterales"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.hideError(cible);\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\tverifEmail() {\n\t\t/**\n\t\t * Regex de vérification d\'email\n\t\t */\n\t\tconst emailRegex =\n\t\t\t/^(([^<>()[]\\.,;:s@]+(.[^<>()[]\\.,;:s@]+)*)|(.+))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/; // Vérification d\'email\n\t\tthis.input.oninput = (e) => {\n\t\t\t// @ts-ignore\n\t\t\tlet textValue = e.target.value.trim();\n\t\t\t// @ts-ignore\n\t\t\tlet cible = e.target.parentNode;\n\t\t\tif (!emailRegex.test(textValue)) {\n\t\t\t\tthis.showError(cible, "Veuillez entrez une adresse email valide");\n\t\t\t} else {\n\t\t\t\tthis.hideError(cible);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @param {HTMLElement} cible\tElement avec erreur\n\t * @param {string} errorText\tTexte correspondant à l\'erreur\n\t */\n\tshowError(cible, errorText) {\n\t\tcible.removeAttribute("data-valid");\n\t\tcible.setAttribute("data-error-visible", "true");\n\t\tcible.setAttribute("data-error", errorText);\n\t}\n\n\t/**\n\t * @param {HTMLElement} cible\t\tElement sans erreur\n\t */\n\thideError(cible) {\n\t\tcible.removeAttribute("data-error-visible");\n\t\tcible.removeAttribute("data-error");\n\t\tcible.setAttribute("data-valid", "true");\n\t}\n\t/**\n\t * Insertion div "formData" qui est le container de chaque input/textArea\n\t */\n\tinsertFormData() {\n\t\tthis.formData = document.createElement("div");\n\t\tthis.formData.classList.add("formData");\n\t\tthis.form.appendChild(this.formData);\n\t}\n\t/**\n\t * Insertion de la balise form\n\t */\n\tinsertForm() {\n\t\tthis.form = document.createElement("form");\n\t\tthis.form.name = "reserve";\n\t\tthis.form.action = "index.html";\n\t\tthis.form.method = "get";\n\t\tthis.formModal.appendChild(this.form);\n\t}\n\t/**\n\t * Insertion du nom\n\t */\n\tinsertName() {\n\t\tthis.h1 = document.createElement("h1");\n\t\tthis.h1.innerHTML = `Contactez-moi<br>${this.name}`;\n\t\tthis.formModal.appendChild(this.h1);\n\t}\n\t/**\n\t * Affichage du bouton de fermeture (croix)\n\t */\n\tinsertBtClose() {\n\t\tthis.close = document.createElement("button");\n\t\tthis.close.classList.add("close");\n\t\tthis.close.type = "button";\n\t\tthis.close.title = "Close Contact form";\n\t\tthis.close.onclick = () => {\n\t\t\tthis.closeFormContact();\n\t\t};\n\t\tthis.content.appendChild(this.close);\n\t}\n\t/**\n\t * Gestion du bouton close (croix)\n\t */\n\tcloseFormContact() {\n\t\tthis.DOM.removeAttribute("visible");\n\t\tthis.DOM.parentElement.style.overflow = "auto";\n\t\tthis.reactivBackgroundBoutons();\n\t}\n\t/**\n\t * Réactivation des boutons d\'arriére plan du formulaire lors de sa fermeture\n\t */\n\treactivBackgroundBoutons() {\n\t\tthis.buttons = document.querySelectorAll("button");\n\t\tfor (let i = 0; i < this.buttons.length; i++) {\n\t\t\tconst elm = this.buttons[i];\n\t\t\telm.removeAttribute("disabled");\n\t\t}\n\t\tthis.widgetLabel = document.getElementById("select");\n\t\tthis.widgetLabel.setAttribute("tabindex", "0");\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/components/photographerPage/photographerPage.js\n\n\n\n\nclass PhotographerPage {\n\tconstructor(domTarget, props) {\n\t\tthis.tagsChecked = [];\n\t\tthis.id = props.id;\n\t\tthis.photographer = props.photographer;\n\t\tthis.mediasChosen = props.mediasChosen;\n\t\tnew Header(\n\t\t\tdomTarget,\n\t\t\tnull,\n\t\t\tthis.tagsChecked,\n\t\t\t"header",\n\t\t\t"header-photographer"\n\t\t);\n\t\tnew PhotographerMain(domTarget, {\n\t\t\tphotographer: this.photographer,\n\t\t\tmediasChosen: this.mediasChosen,\n\t\t\tid: this.id,\n\t\t});\n\t\tnew FormModal(domTarget, { name: this.photographer.name });\n\t}\n}\n\n;// CONCATENATED MODULE: ./src/app.js\n\n\n// /* *************************************************************************************************************************************************************************************************************************************************************** */\nconst body = document.body;\n\n\n\n\n/**\n * Gestion de l\'affichage des pages\n *\n * @return  {promise}  Affiche la page demandé\n */\nasync function PagesMahager() {\n\tif (window.location.pathname.split("/").pop() == "") {\n\t\tconst photographers = await fetchPhotographers();\n\t\tnew Index(body, {\n\t\t\tphotographers,\n\t\t});\n\t} else if (window.location.pathname.split("/").pop() == "photographer.html") {\n\t\tconst url = new URL(window.location.href);\n\t\tconst id = url.searchParams.get("id");\n\t\tconst photographer = await fetchChosenPhotographer(id);\n\t\tconst mediasChosen = await fetchChosenMedia(id);\n\t\tnew PhotographerPage(body, {\n\t\t\tid,\n\t\t\tphotographer,\n\t\t\tmediasChosen,\n\t\t});\n\t}\n}\n\nPagesMahager();\n\n\n//# sourceURL=webpack://p6/./src/app.js_+_17_modules?')}},__webpack_exports__={};__webpack_modules__[40]()})();